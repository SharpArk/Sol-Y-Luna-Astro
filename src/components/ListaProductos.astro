---
interface Producto {
  id: number;
  name: string;
  description_short: string;
  images: Images[];
  sizes: Size[];
}

interface Images {
  image: string;
  product: string;
}

interface Size {
  id: number;
  size: string;
  price: number;
  product: string;
}

import { PUBLIC_API_URL } from "astro:env/client";
import { API_URL } from "astro:env/server";

const data = await fetch(`${API_URL}/store/products/`);
const productos: Producto[] = await data.json();
---

{
  productos.map((producto: Producto) => (
    <a href={`/Tienda/producto/${producto.id}`}>
      <article
        class="w-[250px] h-[300px] bg-[#fef1f7] rounded-3xl cursor-pointer relative"
        data-img={producto.images[0].image}
      >
        <img
          class="w-[250px] h-[200px] object-cover rounded-t-3xl"
          src={`${PUBLIC_API_URL}/${producto.images[0].image}`}
        />
        <div class="text-black flex flex-col items-center justify-start p-2">
          <p>{producto.name}</p>
          <p>{producto.description_short}</p>
          {producto.sizes && producto.sizes.length > 0 ? (
            <>
              <p>{producto.sizes[0].size}</p>
              <p>${producto.sizes[0].price}</p>
            </>
          ) : (
            <p>No sizes available</p>
          )}
        </div>
      </article>
    </a>
  ))
}
<div class="w-[50%] fixed right-0 top-0 h-screen">
  <div
    class="absolute inset-0 bg-gradient-to-l from-[#fe68a6] to-[#343446] pointer-events-none animate-pulse efect"
  >
  </div>
  {
    productos.map((producto: Producto) => (
      <img
        class="w-full h-full object-cover img absolute transition-opacity duration-300 opacity-0"
        src={`${PUBLIC_API_URL}/${producto.images[0].image}`}
        alt=""
        data-img={producto.images[0].image}
        transition:name={`${producto.id}`}
      />
    ))
  }
</div>

<style>
  .img {
    mask-image: linear-gradient(to left, #000 80%, transparent);
    transition: opacity 0.3s ease;
  }

  article::after {
    content: "";
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    background-image: url("/hover/hover-article.svg");
    background-size: cover;
    width: 0;
    height: 0;
    opacity: 0;
    transition: 0.3s ease;
  }

  article:hover::after {
    width: calc(100% + 15px);
    height: calc(100% + 15px);
    opacity: 1;
  }
</style>

<script>
  function initHoverEffect() {
    const gradient = document.querySelector(".efect");
    const imgs = document.querySelectorAll(".img");

    document.querySelectorAll("article").forEach((article) => {
      const targetImgName = article.getAttribute("data-img");

      article.addEventListener("mouseenter", () => {
        imgs.forEach((img) => {
          if ((img as HTMLElement).dataset.img === targetImgName) {
            img.classList.remove("opacity-0");
          } else {
            img.classList.add("opacity-0");
          }
        });
        if (gradient) gradient.classList.add("opacity-0");
      });

      article.addEventListener("mouseleave", () => {
        imgs.forEach((img) => (img as HTMLElement).classList.add("opacity-0"));
        if (gradient) gradient.classList.remove("opacity-0");
      });
    });
  }

  document.addEventListener("astro:after-swap", () => {
    requestAnimationFrame(() => {
      initHoverEffect();
    });
  });

  // Ejecutar al cargar por primera vez
  requestAnimationFrame(() => {
    initHoverEffect();
  });
</script>
