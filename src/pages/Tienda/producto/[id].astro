---
import Layout from "../../../layouts/Layout.astro";

const { id } = Astro.params;
interface Producto {
  id: number;
  name: string;
  description_short: string;
  desctiption_long: string;
  image: Image[];
  sizes: Size[];
}

interface Image {
  image: string;
  product: string;
}

interface Size {
  id: number;
  size: string;
  price: number;
  product: string;
}

import { API_URL } from "astro:env/server";

const data = await fetch(`${API_URL}/store/products/`);
const productos: Producto[] = await data.json();

const ids = productos.map((producto: Producto) => producto.id);

export async function getStaticPaths() {
  return ids.map((id) => ({
    params: { id: id.toString() },
  }));
}
---

<Layout
  Title="Sol y Luna - Titulo del producto"
  Description="Descripción del producto"
  Active="Tienda"
>
  <div class="flex h-screen w-screen fixed justify-between items-center p-12">
    <div class="flex flex-col gap-5">
      {
        productos.map((producto: Producto) => {
          if (producto.id === parseInt(id)) {
            return (
              <img
                class="w-[500px] h-[500px] object-cover rounded-3xl"
                src={`${API_URL}/imgs/${producto.image[0].image}`}
                alt={`Imagen del producto ${id}`}
              />
            );
          }
        })
      }
    </div>
    {
      productos.map((producto: Producto) => (
        <div class="flex flex-col gap-5">
          <h1 class="text-5xl relative uppercase">
            {producto.name}
            <div class="w-full h-full blur-2xl bg-[#e91e63] absolute top-0 left-0 -z-10" />
          </h1>
          <p>{producto.desctiption_long}</p>
          <div class="flex gap-2">
            {producto.sizes.map((size: Size) => (
              <div class="flex flex-col gap-2">
                <p class="text-2xl">{size.size}</p>
              </div>
            ))}
          </div>
          <p class="price relative w-fit text-2xl">{producto.sizes[0].price}</p>
          <button class="uppercase p-4 border-4 border-[#e91e63] rounded-full text-[#e91e63] font-bold cursor-pointer hover:bg-[#e91e63] hover:text-white transition-colors duration-300">
            Añadir al carrito
          </button>
        </div>
      ))
    }
  </div>
  <article class="flex w-screen justify-center items-center flex-col gap-5">
    {
      productos.map((producto: Producto) => {
        if (producto.id === parseInt(id)) {
          return (
            <img
              class="w-[500px] h-[500px] object-cover rounded-3xl"
              src={`${API_URL}/imgs/${producto.image[0].image}`}
              alt={`Imagen del producto ${id}`}
            />
          );
        }
      })
    }
  </article>
</Layout>

<script type="module">
  const grayScaleEffect = () => {
    const observer = new IntersectionObserver(
      (entries) => {
        entries.forEach((entry) => {
          const index = entry.target.dataset.index;
          const fixedImage = document.querySelector(
            `.fixed img[data-index="${index}"]`
          );
          if (fixedImage) {
            if (entry.isIntersecting) {
              fixedImage.classList.remove("grayscale");
            } else {
              fixedImage.classList.add("grayscale");
            }
          }
        });
      },
      { threshold: 0.5 }
    );

    document.querySelectorAll("article img").forEach((img) => {
      observer.observe(img);
    });

    document.querySelectorAll(".fixed img").forEach((img) => {
      img.addEventListener("click", (event) => {
        const index = event.target.dataset.index;
        const targetImage = document.querySelector(
          `article img[data-index="${index}"]`
        );
        if (targetImage) {
          targetImage.scrollIntoView({ behavior: "smooth", block: "center" });
        }
      });
    });
  };

  const waitForContentAndRun = () => {
    requestAnimationFrame(() => {
      grayScaleEffect();
    });
  };
  if (document.readyState !== "loading") {
    grayScaleEffect();
  } else {
    document.addEventListener("DOMContentLoaded", grayScaleEffect);
  }
  document.addEventListener("astro:after-swap", waitForContentAndRun);
</script>

<style>
  .img {
    mask-image: linear-gradient(
      90deg,
      transparent 0%,
      black 50%,
      transparent 100%
    );
  }

  .price::after {
    content: "";
    position: absolute;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    background-color: #8798f2;
    filter: blur(14px);
    z-index: -1;
  }

  .fixed img {
    transition:
      transform 0.3s ease,
      filter 0.3s ease;
  }

  .fixed img:not(.grayscale) {
    transform: scale(1.1) translateX(50px);
  }
</style>
